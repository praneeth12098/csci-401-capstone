<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link rel="stylesheet" href="/stylesheets/style.css"/>
    <link rel="stylesheet" type="text/css" href="/css/form-entry.css"/>
    <link rel="stylesheet" type="text/css" href="/css/all.css"/>
    <script>
        var questions = <%- JSON.stringify(questions) %>
    </script>
</head>
<body>
<div class="header"></div>
<p class="title"><%= title %></p>
<div class = "form-entry">
<div class="optional-message">Questions marked with an * are required.</div>
<form id="RecommendeeForm">
    <% for (var q of questions) { %>
    <div class="question" id=<%= q.type %>>
        <% if (q.optional) { %>
            <p><%= q.question %></p>
        <% } else { %>
            <p>*<%= q.question %></p>
        <% } %>
        <% switch(q.type) {
        case 'Text': %>
        <div class="error-container">
            <textarea form="RecommendeeForm" placeholder="Enter response..."
                      id=<%= q.number %> name=<%= q.number %>></textarea>
        </div>
        <% break;
        case 'Radio Button': %>
        <div class="error-container">
            <div class="options-container">
                <% for (var option of q.options) { %>
                <div class="option-container">
                    <input type="radio" value="<%= option.fill %>" name=<%= q.number %>>
                    <label><%= option.option %></label>
                </div>
                <% } %>
            </div>
        </div>
        <% break;
        case 'Checkbox': %>
        <div class="error-container">
            <div class="options-container">
                <% for (var option of q.options) { %>
                <div class="option-container">
                    <input type="checkbox" value="<%= option.fill %>" name=<%= q.number %>>
                    <label class="block"><%= option.option %></label>
                </div>
                <% } %>
            </div>
        </div>

        <% break;
        case 'Custom': %>
        <div class="error-container">
            <div class="options-container">
                <%
                    var numOptions = q.options.length;
                    var qNum = q.number;
                %>
                <button type="button" onclick="addOrganizationRowHTML('<%= numOptions %>', '<%= qNum %>')">
                    Add Organization
                </button>
                <table id="customTable">
                    <tr>
                    <% for (var option of q.options) { %>
                        <th><%= option.option %></th>
                    <% } %>
                    </tr>
                    <tr>
                        <% for (var option of q.options) { %>
                            <td><input type="text" name=<%= q.number %>></td>
                        <% } %>
                    </tr>
                </table>
            </div>
        </div>

        <% break;
            default: %>
        <%
        } %>
    </div>
    <% } %>
    <input class="input-submit" type="button" value="Submit" onclick="openModal()"/>
    <div id="myModal" class="modal">
        <div class="modal-content">
            <div class="close-container">
                <span class="close" onclick="closeModal()">&times;</span>
            </div>
            <p class="modal-title">Confirm Submission?</p>
            <button class="input-submit" type="button" value="Confirm" onclick="submitForm('<%= form._id %>')">Confirm
            </button>
        </div>
    </div>
</form>
</div>
</body>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script>
    // adds a new organization row
    function addOrganizationRowHTML(numOptions, qNum) {
        let myTable = document.getElementById("customTable");
        let row = myTable.insertRow(-1);

        // create cells based on num qs
        for(let i=0; i<numOptions; i++) {
            let cell = row.insertCell(i);
            let inputEle = document.createElement("input");
            inputEle.type = "text";
            inputEle.name = qNum;
            cell.appendChild(inputEle);
        }
    }

    // Get the modal
    var modal = document.getElementById('myModal');
    var errors = [];

    // When the user clicks on the button, open the modal
    function openModal() {
        if (!validate()) {
            closeModal()
            return false;
        }

        modal.style.display = "block";
        return false;
    }

    // When the user clicks on <span> (x), close the modal
    function closeModal() {
        modal.style.display = "none";
        return false;
    }

    // validates form, makes sure optional questions are answers, else shows errors
    function validate() {
        clearErrors();
        var status = true;

        $("#RecommendeeForm").children('.question').each(function () {
            var question = $(this);

            var id = question.attr('id');
            if (id === 'Text') {
                var errorContainer = $(question.children('.error-container')[0]);
                var textArea = $(errorContainer.children('textarea')[0]);

                // check if question is optional
                if (isOptional(textArea.attr('id'))) {
                    return;
                }
                // empty response, show error
                if (textArea.val() === '') {
                    errors.push({
                        error: addError(textArea, 'text answer required'),
                        field: textArea
                    });
                    status = false;
                }
            } else if (id === 'Radio' || id === 'Checkbox') {
                var selected = false;

                var errorContainer = $(question.children('.error-container')[0]);
                var optionsContainer = $(errorContainer.children('.options-container')[0]);

                if (isOptional($($(optionsContainer.children('.option-container')[0]).children('input')[0]).attr('name'))) {
                    return;
                }

                optionsContainer.children('.option-container').each(function () {
                    var option = $(this);
                    var input = $(option.children('input')[0]);
                    selected = selected || input.is(':checked');
                })

                if (!selected) {
                    if (id === 'Radio') {
                        errors.push({
                            error: addError(optionsContainer, 'please select an option'),
                            field: optionsContainer
                        });
                    } else {
                        errors.push({
                            error: addError(optionsContainer, 'please select at least one option'),
                            field: optionsContainer
                        });
                    }
                    status = false;
                }
            }
        });

        return status;
    }

    function isOptional(number) {
        return questions[number - 1].optional;
    }

    function addError(field, message) {
        var container = field.parent();
        var error = $('<div></div>');
        var errorText = $('<p></p>');
        field.addClass('error');
        error.addClass('arrow-box');
        errorText.addClass('arrow-text');
        errorText.text('Error: ' + message);
        error.append(errorText);
        container.append(error);

        return error;
    }

    function clearErrors() {
        for (var i = 0; i < errors.length; i++) {
            errors[i].error.remove();
            errors[i].field.removeClass('error');
        }

        errors.length = 0;
    }

    /**
     * Student submits form; takes responses and serializes it
     * Fired when student presses confirm button in Confirm Submission Modal
     * @param id
     * @returns {boolean}
     */
    function submitForm(id) {

        // takes all responses and serializes into an object
        var responseData = $("#RecommendeeForm").serializeArray().reduce(function (obj, item) {
            if (obj[item.name]) {
                if (!Array.isArray(obj[item.name])) {
                    var arr = [obj[item.name], item.value];
                    obj[item.name] = arr;
                } else {
                    obj[item.name].push(item.value)
                }
            } else { // Joyce, Wang, she, her, org
                obj[item.name] = item.value;
            }
            return obj;
        }, {});

        // takes responseData and puts each response as an element in responseArray
        var responseArray = [];
        for (var i = 0; i < questions.length; i++) {
            // if is checkbox or custom and is not as array, make it array
            if (responseData[i + 1]) {
                // push all as array
                if (!Array.isArray(responseData[i + 1])) {
                    var arr = [responseData[i + 1]];
                    responseArray.push(arr);
                } else {
                    responseArray.push(responseData[i + 1]);
                }
                
            } else {
                responseArray.push('');
            }
        }
        // redirects to form-completed page on success, sends responseArray to server
        $.ajax({
            url: 'http://localhost:3000/form-entry',
            data: {
                id: id,
                responseData: responseArray
            },
            type: 'POST',
            complete: function () {
                console.log('complete');
            },
            success: function (form) {
                console.log('success');
                window.location.href = ('/form-completed');
            },
            error: function () {
                console.log('error');
            }
        });

        return false;
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
</script>
</html>